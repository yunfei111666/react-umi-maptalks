// source: data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var act_jobs_pb = require('./act_jobs_pb.js');
goog.object.extend(proto, act_jobs_pb);
var act_status_pb = require('./act_status_pb.js');
goog.object.extend(proto, act_status_pb);
var machine_status_pb = require('./machine_status_pb.js');
goog.object.extend(proto, machine_status_pb);
goog.exportSymbol('proto.ActFault', null, global);
goog.exportSymbol('proto.Data', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ActFault = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ActFault, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.ActFault.displayName = 'proto.ActFault';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Data = function (opt_data) {
    jspb.Message.initialize(
        this,
        opt_data,
        0,
        -1,
        proto.Data.repeatedFields_,
        null,
    );
};
goog.inherits(proto.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.Data.displayName = 'proto.Data';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.ActFault.prototype.toObject = function (opt_includeInstance) {
        return proto.ActFault.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.ActFault} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.ActFault.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                cheId: jspb.Message.getFieldWithDefault(msg, 1, ''),
                code: jspb.Message.getFieldWithDefault(msg, 2, ''),
                alarmLevel: jspb.Message.getFieldWithDefault(msg, 3, ''),
                alarmLevelDesc: jspb.Message.getFieldWithDefault(msg, 4, ''),
                category: jspb.Message.getFieldWithDefault(msg, 5, ''),
                categoryDesc: jspb.Message.getFieldWithDefault(msg, 6, ''),
                alarmType: jspb.Message.getFieldWithDefault(msg, 7, ''),
                alarmTypeDesc: jspb.Message.getFieldWithDefault(msg, 8, ''),
                alarmCode: jspb.Message.getFieldWithDefault(msg, 9, ''),
                alarmCodeDesc: jspb.Message.getFieldWithDefault(msg, 10, ''),
                subCode: jspb.Message.getFieldWithDefault(msg, 11, ''),
                subDesc: jspb.Message.getFieldWithDefault(msg, 12, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ActFault}
 */
proto.ActFault.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.ActFault();
    return proto.ActFault.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ActFault} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ActFault}
 */
proto.ActFault.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCheId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setCode(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setAlarmLevel(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setAlarmLevelDesc(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setCategory(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setCategoryDesc(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setAlarmType(value);
                break;
            case 8:
                var value = /** @type {string} */ (reader.readString());
                msg.setAlarmTypeDesc(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setAlarmCode(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setAlarmCodeDesc(value);
                break;
            case 11:
                var value = /** @type {string} */ (reader.readString());
                msg.setSubCode(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setSubDesc(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ActFault.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.ActFault.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ActFault} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ActFault.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCheId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getCode();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getAlarmLevel();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getAlarmLevelDesc();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getCategory();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getCategoryDesc();
    if (f.length > 0) {
        writer.writeString(6, f);
    }
    f = message.getAlarmType();
    if (f.length > 0) {
        writer.writeString(7, f);
    }
    f = message.getAlarmTypeDesc();
    if (f.length > 0) {
        writer.writeString(8, f);
    }
    f = message.getAlarmCode();
    if (f.length > 0) {
        writer.writeString(9, f);
    }
    f = message.getAlarmCodeDesc();
    if (f.length > 0) {
        writer.writeString(10, f);
    }
    f = message.getSubCode();
    if (f.length > 0) {
        writer.writeString(11, f);
    }
    f = message.getSubDesc();
    if (f.length > 0) {
        writer.writeString(12, f);
    }
};

/**
 * optional string che_id = 1;
 * @return {string}
 */
proto.ActFault.prototype.getCheId = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setCheId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string code = 2;
 * @return {string}
 */
proto.ActFault.prototype.getCode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setCode = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string alarm_level = 3;
 * @return {string}
 */
proto.ActFault.prototype.getAlarmLevel = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 3, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setAlarmLevel = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string alarm_level_desc = 4;
 * @return {string}
 */
proto.ActFault.prototype.getAlarmLevelDesc = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 4, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setAlarmLevelDesc = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string category = 5;
 * @return {string}
 */
proto.ActFault.prototype.getCategory = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 5, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setCategory = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string category_desc = 6;
 * @return {string}
 */
proto.ActFault.prototype.getCategoryDesc = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 6, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setCategoryDesc = function (value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string alarm_type = 7;
 * @return {string}
 */
proto.ActFault.prototype.getAlarmType = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 7, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setAlarmType = function (value) {
    return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * optional string alarm_type_desc = 8;
 * @return {string}
 */
proto.ActFault.prototype.getAlarmTypeDesc = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 8, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setAlarmTypeDesc = function (value) {
    return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional string alarm_code = 9;
 * @return {string}
 */
proto.ActFault.prototype.getAlarmCode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 9, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setAlarmCode = function (value) {
    return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional string alarm_code_desc = 10;
 * @return {string}
 */
proto.ActFault.prototype.getAlarmCodeDesc = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 10, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setAlarmCodeDesc = function (value) {
    return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional string sub_code = 11;
 * @return {string}
 */
proto.ActFault.prototype.getSubCode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 11, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setSubCode = function (value) {
    return jspb.Message.setProto3StringField(this, 11, value);
};

/**
 * optional string sub_desc = 12;
 * @return {string}
 */
proto.ActFault.prototype.getSubDesc = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 12, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActFault} returns this
 */
proto.ActFault.prototype.setSubDesc = function (value) {
    return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Data.repeatedFields_ = [1, 2, 3, 4];

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.Data.prototype.toObject = function (opt_includeInstance) {
        return proto.Data.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.Data} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.Data.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                actStatusList: jspb.Message.toObjectList(
                    msg.getActStatusList(),
                    act_status_pb.ActStatus.toObject,
                    includeInstance,
                ),
                actJobsList: jspb.Message.toObjectList(
                    msg.getActJobsList(),
                    act_jobs_pb.ActJobs.toObject,
                    includeInstance,
                ),
                machineStatusList: jspb.Message.toObjectList(
                    msg.getMachineStatusList(),
                    machine_status_pb.MachineStatus.toObject,
                    includeInstance,
                ),
                actFaultsList: jspb.Message.toObjectList(
                    msg.getActFaultsList(),
                    proto.ActFault.toObject,
                    includeInstance,
                ),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Data}
 */
proto.Data.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.Data();
    return proto.Data.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Data}
 */
proto.Data.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new act_status_pb.ActStatus();
                reader.readMessage(
                    value,
                    act_status_pb.ActStatus.deserializeBinaryFromReader,
                );
                msg.addActStatus(value);
                break;
            case 2:
                var value = new act_jobs_pb.ActJobs();
                reader.readMessage(
                    value,
                    act_jobs_pb.ActJobs.deserializeBinaryFromReader,
                );
                msg.addActJobs(value);
                break;
            case 3:
                var value = new machine_status_pb.MachineStatus();
                reader.readMessage(
                    value,
                    machine_status_pb.MachineStatus.deserializeBinaryFromReader,
                );
                msg.addMachineStatus(value);
                break;
            case 4:
                var value = new proto.ActFault();
                reader.readMessage(
                    value,
                    proto.ActFault.deserializeBinaryFromReader,
                );
                msg.addActFaults(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Data.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.Data.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Data.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getActStatusList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            act_status_pb.ActStatus.serializeBinaryToWriter,
        );
    }
    f = message.getActJobsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            2,
            f,
            act_jobs_pb.ActJobs.serializeBinaryToWriter,
        );
    }
    f = message.getMachineStatusList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            3,
            f,
            machine_status_pb.MachineStatus.serializeBinaryToWriter,
        );
    }
    f = message.getActFaultsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            4,
            f,
            proto.ActFault.serializeBinaryToWriter,
        );
    }
};

/**
 * repeated ActStatus act_status = 1;
 * @return {!Array<!proto.ActStatus>}
 */
proto.Data.prototype.getActStatusList = function () {
    return /** @type{!Array<!proto.ActStatus>} */ (
        jspb.Message.getRepeatedWrapperField(this, act_status_pb.ActStatus, 1)
    );
};

/**
 * @param {!Array<!proto.ActStatus>} value
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.setActStatusList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.ActStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ActStatus}
 */
proto.Data.prototype.addActStatus = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        1,
        opt_value,
        proto.ActStatus,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.clearActStatusList = function () {
    return this.setActStatusList([]);
};

/**
 * repeated ActJobs act_jobs = 2;
 * @return {!Array<!proto.ActJobs>}
 */
proto.Data.prototype.getActJobsList = function () {
    return /** @type{!Array<!proto.ActJobs>} */ (
        jspb.Message.getRepeatedWrapperField(this, act_jobs_pb.ActJobs, 2)
    );
};

/**
 * @param {!Array<!proto.ActJobs>} value
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.setActJobsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.ActJobs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ActJobs}
 */
proto.Data.prototype.addActJobs = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        2,
        opt_value,
        proto.ActJobs,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.clearActJobsList = function () {
    return this.setActJobsList([]);
};

/**
 * repeated MachineStatus machine_status = 3;
 * @return {!Array<!proto.MachineStatus>}
 */
proto.Data.prototype.getMachineStatusList = function () {
    return /** @type{!Array<!proto.MachineStatus>} */ (
        jspb.Message.getRepeatedWrapperField(
            this,
            machine_status_pb.MachineStatus,
            3,
        )
    );
};

/**
 * @param {!Array<!proto.MachineStatus>} value
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.setMachineStatusList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.MachineStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MachineStatus}
 */
proto.Data.prototype.addMachineStatus = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        3,
        opt_value,
        proto.MachineStatus,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.clearMachineStatusList = function () {
    return this.setMachineStatusList([]);
};

/**
 * repeated ActFault act_faults = 4;
 * @return {!Array<!proto.ActFault>}
 */
proto.Data.prototype.getActFaultsList = function () {
    return /** @type{!Array<!proto.ActFault>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.ActFault, 4)
    );
};

/**
 * @param {!Array<!proto.ActFault>} value
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.setActFaultsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};

/**
 * @param {!proto.ActFault=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ActFault}
 */
proto.Data.prototype.addActFaults = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        4,
        opt_value,
        proto.ActFault,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Data} returns this
 */
proto.Data.prototype.clearActFaultsList = function () {
    return this.setActFaultsList([]);
};

goog.object.extend(exports, proto);
