// source: act_status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var point_pb = require('./point_pb.js');
goog.object.extend(proto, point_pb);
goog.exportSymbol('proto.ActStatus', null, global);
goog.exportSymbol('proto.FaultInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FaultInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.FaultInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.FaultInfo.displayName = 'proto.FaultInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ActStatus = function (opt_data) {
    jspb.Message.initialize(
        this,
        opt_data,
        0,
        -1,
        proto.ActStatus.repeatedFields_,
        null,
    );
};
goog.inherits(proto.ActStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.ActStatus.displayName = 'proto.ActStatus';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.FaultInfo.prototype.toObject = function (opt_includeInstance) {
        return proto.FaultInfo.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.FaultInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.FaultInfo.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                code: jspb.Message.getFieldWithDefault(msg, 1, ''),
                desc: jspb.Message.getFieldWithDefault(msg, 2, ''),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FaultInfo}
 */
proto.FaultInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.FaultInfo();
    return proto.FaultInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FaultInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FaultInfo}
 */
proto.FaultInfo.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCode(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDesc(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FaultInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.FaultInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FaultInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FaultInfo.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCode();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getDesc();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};

/**
 * optional string code = 1;
 * @return {string}
 */
proto.FaultInfo.prototype.getCode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.FaultInfo} returns this
 */
proto.FaultInfo.prototype.setCode = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string desc = 2;
 * @return {string}
 */
proto.FaultInfo.prototype.getDesc = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.FaultInfo} returns this
 */
proto.FaultInfo.prototype.setDesc = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ActStatus.repeatedFields_ = [8];

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.ActStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.ActStatus.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.ActStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.ActStatus.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                cheId: jspb.Message.getFieldWithDefault(msg, 1, ''),
                isAttendenceTos: jspb.Message.getFieldWithDefault(msg, 2, ''),
                stateFlow: jspb.Message.getFieldWithDefault(msg, 3, ''),
                estop: jspb.Message.getFieldWithDefault(msg, 4, ''),
                plannedDestination: jspb.Message.getFieldWithDefault(
                    msg,
                    5,
                    '',
                ),
                technicalStatus: jspb.Message.getFieldWithDefault(msg, 6, ''),
                technicalDetails: jspb.Message.getFieldWithDefault(msg, 7, ''),
                faultsList: jspb.Message.toObjectList(
                    msg.getFaultsList(),
                    proto.FaultInfo.toObject,
                    includeInstance,
                ),
                operationalStatus: jspb.Message.getFieldWithDefault(msg, 9, ''),
                motionMode: jspb.Message.getFieldWithDefault(msg, 10, ''),
                mileage: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    11,
                    0.0,
                ),
                location: jspb.Message.getFieldWithDefault(msg, 12, ''),
                lastLocation: jspb.Message.getFieldWithDefault(msg, 13, ''),
                nextLocation: jspb.Message.getFieldWithDefault(msg, 14, ''),
                point:
                    (f = msg.getPoint()) &&
                    point_pb.Point.toObject(includeInstance, f),
                yaw: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    16,
                    0.0,
                ),
                distanceToTarget: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    17,
                    0.0,
                ),
                orientation: jspb.Message.getFieldWithDefault(msg, 18, ''),
                speed: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    19,
                    0.0,
                ),
                soh: jspb.Message.getFieldWithDefault(msg, 20, 0),
                soc: jspb.Message.getFieldWithDefault(msg, 21, 0),
                isCharging: jspb.Message.getFieldWithDefault(msg, 22, ''),
                isLoaded: jspb.Message.getFieldWithDefault(msg, 24, ''),
                turnLight: jspb.Message.getFieldWithDefault(msg, 25, ''),
                gear: jspb.Message.getFieldWithDefault(msg, 26, ''),
                offsetL: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    27,
                    0.0,
                ),
                offsetT: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    28,
                    0.0,
                ),
                offsetYaw: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    29,
                    0.0,
                ),
                taskGkey: jspb.Message.getFieldWithDefault(msg, 30, ''),
                created:
                    (f = msg.getCreated()) &&
                    google_protobuf_timestamp_pb.Timestamp.toObject(
                        includeInstance,
                        f,
                    ),
                updated:
                    (f = msg.getUpdated()) &&
                    google_protobuf_timestamp_pb.Timestamp.toObject(
                        includeInstance,
                        f,
                    ),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ActStatus}
 */
proto.ActStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.ActStatus();
    return proto.ActStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ActStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ActStatus}
 */
proto.ActStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCheId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setIsAttendenceTos(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setStateFlow(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setEstop(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setPlannedDestination(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setTechnicalStatus(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.setTechnicalDetails(value);
                break;
            case 8:
                var value = new proto.FaultInfo();
                reader.readMessage(
                    value,
                    proto.FaultInfo.deserializeBinaryFromReader,
                );
                msg.addFaults(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setOperationalStatus(value);
                break;
            case 10:
                var value = /** @type {string} */ (reader.readString());
                msg.setMotionMode(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setMileage(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocation(value);
                break;
            case 13:
                var value = /** @type {string} */ (reader.readString());
                msg.setLastLocation(value);
                break;
            case 14:
                var value = /** @type {string} */ (reader.readString());
                msg.setNextLocation(value);
                break;
            case 15:
                var value = new point_pb.Point();
                reader.readMessage(
                    value,
                    point_pb.Point.deserializeBinaryFromReader,
                );
                msg.setPoint(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setYaw(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setDistanceToTarget(value);
                break;
            case 18:
                var value = /** @type {string} */ (reader.readString());
                msg.setOrientation(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setSpeed(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSoh(value);
                break;
            case 21:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setSoc(value);
                break;
            case 22:
                var value = /** @type {string} */ (reader.readString());
                msg.setIsCharging(value);
                break;
            case 24:
                var value = /** @type {string} */ (reader.readString());
                msg.setIsLoaded(value);
                break;
            case 25:
                var value = /** @type {string} */ (reader.readString());
                msg.setTurnLight(value);
                break;
            case 26:
                var value = /** @type {string} */ (reader.readString());
                msg.setGear(value);
                break;
            case 27:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setOffsetL(value);
                break;
            case 28:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setOffsetT(value);
                break;
            case 29:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setOffsetYaw(value);
                break;
            case 30:
                var value = /** @type {string} */ (reader.readString());
                msg.setTaskGkey(value);
                break;
            case 31:
                var value = new google_protobuf_timestamp_pb.Timestamp();
                reader.readMessage(
                    value,
                    google_protobuf_timestamp_pb.Timestamp
                        .deserializeBinaryFromReader,
                );
                msg.setCreated(value);
                break;
            case 32:
                var value = new google_protobuf_timestamp_pb.Timestamp();
                reader.readMessage(
                    value,
                    google_protobuf_timestamp_pb.Timestamp
                        .deserializeBinaryFromReader,
                );
                msg.setUpdated(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ActStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.ActStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ActStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ActStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCheId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getIsAttendenceTos();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getStateFlow();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getEstop();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getPlannedDestination();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getTechnicalStatus();
    if (f.length > 0) {
        writer.writeString(6, f);
    }
    f = message.getTechnicalDetails();
    if (f.length > 0) {
        writer.writeString(7, f);
    }
    f = message.getFaultsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            8,
            f,
            proto.FaultInfo.serializeBinaryToWriter,
        );
    }
    f = message.getOperationalStatus();
    if (f.length > 0) {
        writer.writeString(9, f);
    }
    f = message.getMotionMode();
    if (f.length > 0) {
        writer.writeString(10, f);
    }
    f = message.getMileage();
    if (f !== 0.0) {
        writer.writeFloat(11, f);
    }
    f = message.getLocation();
    if (f.length > 0) {
        writer.writeString(12, f);
    }
    f = message.getLastLocation();
    if (f.length > 0) {
        writer.writeString(13, f);
    }
    f = message.getNextLocation();
    if (f.length > 0) {
        writer.writeString(14, f);
    }
    f = message.getPoint();
    if (f != null) {
        writer.writeMessage(15, f, point_pb.Point.serializeBinaryToWriter);
    }
    f = message.getYaw();
    if (f !== 0.0) {
        writer.writeFloat(16, f);
    }
    f = message.getDistanceToTarget();
    if (f !== 0.0) {
        writer.writeFloat(17, f);
    }
    f = message.getOrientation();
    if (f.length > 0) {
        writer.writeString(18, f);
    }
    f = message.getSpeed();
    if (f !== 0.0) {
        writer.writeFloat(19, f);
    }
    f = message.getSoh();
    if (f !== 0) {
        writer.writeInt32(20, f);
    }
    f = message.getSoc();
    if (f !== 0) {
        writer.writeInt32(21, f);
    }
    f = message.getIsCharging();
    if (f.length > 0) {
        writer.writeString(22, f);
    }
    f = message.getIsLoaded();
    if (f.length > 0) {
        writer.writeString(24, f);
    }
    f = message.getTurnLight();
    if (f.length > 0) {
        writer.writeString(25, f);
    }
    f = message.getGear();
    if (f.length > 0) {
        writer.writeString(26, f);
    }
    f = message.getOffsetL();
    if (f !== 0.0) {
        writer.writeDouble(27, f);
    }
    f = message.getOffsetT();
    if (f !== 0.0) {
        writer.writeDouble(28, f);
    }
    f = message.getOffsetYaw();
    if (f !== 0.0) {
        writer.writeDouble(29, f);
    }
    f = message.getTaskGkey();
    if (f.length > 0) {
        writer.writeString(30, f);
    }
    f = message.getCreated();
    if (f != null) {
        writer.writeMessage(
            31,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
        );
    }
    f = message.getUpdated();
    if (f != null) {
        writer.writeMessage(
            32,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
        );
    }
};

/**
 * optional string che_id = 1;
 * @return {string}
 */
proto.ActStatus.prototype.getCheId = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 1, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setCheId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string is_attendence_tos = 2;
 * @return {string}
 */
proto.ActStatus.prototype.getIsAttendenceTos = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 2, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setIsAttendenceTos = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string state_flow = 3;
 * @return {string}
 */
proto.ActStatus.prototype.getStateFlow = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 3, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setStateFlow = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string estop = 4;
 * @return {string}
 */
proto.ActStatus.prototype.getEstop = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 4, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setEstop = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string planned_destination = 5;
 * @return {string}
 */
proto.ActStatus.prototype.getPlannedDestination = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 5, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setPlannedDestination = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string technical_status = 6;
 * @return {string}
 */
proto.ActStatus.prototype.getTechnicalStatus = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 6, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setTechnicalStatus = function (value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional string technical_details = 7;
 * @return {string}
 */
proto.ActStatus.prototype.getTechnicalDetails = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 7, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setTechnicalDetails = function (value) {
    return jspb.Message.setProto3StringField(this, 7, value);
};

/**
 * repeated FaultInfo faults = 8;
 * @return {!Array<!proto.FaultInfo>}
 */
proto.ActStatus.prototype.getFaultsList = function () {
    return /** @type{!Array<!proto.FaultInfo>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.FaultInfo, 8)
    );
};

/**
 * @param {!Array<!proto.FaultInfo>} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setFaultsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 8, value);
};

/**
 * @param {!proto.FaultInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FaultInfo}
 */
proto.ActStatus.prototype.addFaults = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        8,
        opt_value,
        proto.FaultInfo,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.clearFaultsList = function () {
    return this.setFaultsList([]);
};

/**
 * optional string operational_status = 9;
 * @return {string}
 */
proto.ActStatus.prototype.getOperationalStatus = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 9, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setOperationalStatus = function (value) {
    return jspb.Message.setProto3StringField(this, 9, value);
};

/**
 * optional string motion_mode = 10;
 * @return {string}
 */
proto.ActStatus.prototype.getMotionMode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 10, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setMotionMode = function (value) {
    return jspb.Message.setProto3StringField(this, 10, value);
};

/**
 * optional float mileage = 11;
 * @return {number}
 */
proto.ActStatus.prototype.getMileage = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setMileage = function (value) {
    return jspb.Message.setProto3FloatField(this, 11, value);
};

/**
 * optional string location = 12;
 * @return {string}
 */
proto.ActStatus.prototype.getLocation = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 12, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setLocation = function (value) {
    return jspb.Message.setProto3StringField(this, 12, value);
};

/**
 * optional string last_location = 13;
 * @return {string}
 */
proto.ActStatus.prototype.getLastLocation = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 13, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setLastLocation = function (value) {
    return jspb.Message.setProto3StringField(this, 13, value);
};

/**
 * optional string next_location = 14;
 * @return {string}
 */
proto.ActStatus.prototype.getNextLocation = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 14, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setNextLocation = function (value) {
    return jspb.Message.setProto3StringField(this, 14, value);
};

/**
 * optional Point point = 15;
 * @return {?proto.Point}
 */
proto.ActStatus.prototype.getPoint = function () {
    return /** @type{?proto.Point} */ (
        jspb.Message.getWrapperField(this, point_pb.Point, 15)
    );
};

/**
 * @param {?proto.Point|undefined} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setPoint = function (value) {
    return jspb.Message.setWrapperField(this, 15, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.clearPoint = function () {
    return this.setPoint(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ActStatus.prototype.hasPoint = function () {
    return jspb.Message.getField(this, 15) != null;
};

/**
 * optional float yaw = 16;
 * @return {number}
 */
proto.ActStatus.prototype.getYaw = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setYaw = function (value) {
    return jspb.Message.setProto3FloatField(this, 16, value);
};

/**
 * optional float distance_to_target = 17;
 * @return {number}
 */
proto.ActStatus.prototype.getDistanceToTarget = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setDistanceToTarget = function (value) {
    return jspb.Message.setProto3FloatField(this, 17, value);
};

/**
 * optional string orientation = 18;
 * @return {string}
 */
proto.ActStatus.prototype.getOrientation = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 18, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setOrientation = function (value) {
    return jspb.Message.setProto3StringField(this, 18, value);
};

/**
 * optional float speed = 19;
 * @return {number}
 */
proto.ActStatus.prototype.getSpeed = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setSpeed = function (value) {
    return jspb.Message.setProto3FloatField(this, 19, value);
};

/**
 * optional int32 soh = 20;
 * @return {number}
 */
proto.ActStatus.prototype.getSoh = function () {
    return /** @type {number} */ (
        jspb.Message.getFieldWithDefault(this, 20, 0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setSoh = function (value) {
    return jspb.Message.setProto3IntField(this, 20, value);
};

/**
 * optional int32 soc = 21;
 * @return {number}
 */
proto.ActStatus.prototype.getSoc = function () {
    return /** @type {number} */ (
        jspb.Message.getFieldWithDefault(this, 21, 0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setSoc = function (value) {
    return jspb.Message.setProto3IntField(this, 21, value);
};

/**
 * optional string is_charging = 22;
 * @return {string}
 */
proto.ActStatus.prototype.getIsCharging = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 22, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setIsCharging = function (value) {
    return jspb.Message.setProto3StringField(this, 22, value);
};

/**
 * optional string is_loaded = 24;
 * @return {string}
 */
proto.ActStatus.prototype.getIsLoaded = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 24, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setIsLoaded = function (value) {
    return jspb.Message.setProto3StringField(this, 24, value);
};

/**
 * optional string turn_light = 25;
 * @return {string}
 */
proto.ActStatus.prototype.getTurnLight = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 25, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setTurnLight = function (value) {
    return jspb.Message.setProto3StringField(this, 25, value);
};

/**
 * optional string gear = 26;
 * @return {string}
 */
proto.ActStatus.prototype.getGear = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 26, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setGear = function (value) {
    return jspb.Message.setProto3StringField(this, 26, value);
};

/**
 * optional double offset_l = 27;
 * @return {number}
 */
proto.ActStatus.prototype.getOffsetL = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setOffsetL = function (value) {
    return jspb.Message.setProto3FloatField(this, 27, value);
};

/**
 * optional double offset_t = 28;
 * @return {number}
 */
proto.ActStatus.prototype.getOffsetT = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 28, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setOffsetT = function (value) {
    return jspb.Message.setProto3FloatField(this, 28, value);
};

/**
 * optional double offset_yaw = 29;
 * @return {number}
 */
proto.ActStatus.prototype.getOffsetYaw = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setOffsetYaw = function (value) {
    return jspb.Message.setProto3FloatField(this, 29, value);
};

/**
 * optional string task_gkey = 30;
 * @return {string}
 */
proto.ActStatus.prototype.getTaskGkey = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 30, '')
    );
};

/**
 * @param {string} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setTaskGkey = function (value) {
    return jspb.Message.setProto3StringField(this, 30, value);
};

/**
 * optional google.protobuf.Timestamp created = 31;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ActStatus.prototype.getCreated = function () {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(
            this,
            google_protobuf_timestamp_pb.Timestamp,
            31,
        )
    );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setCreated = function (value) {
    return jspb.Message.setWrapperField(this, 31, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.clearCreated = function () {
    return this.setCreated(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ActStatus.prototype.hasCreated = function () {
    return jspb.Message.getField(this, 31) != null;
};

/**
 * optional google.protobuf.Timestamp updated = 32;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ActStatus.prototype.getUpdated = function () {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(
            this,
            google_protobuf_timestamp_pb.Timestamp,
            32,
        )
    );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.setUpdated = function (value) {
    return jspb.Message.setWrapperField(this, 32, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.ActStatus} returns this
 */
proto.ActStatus.prototype.clearUpdated = function () {
    return this.setUpdated(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ActStatus.prototype.hasUpdated = function () {
    return jspb.Message.getField(this, 32) != null;
};

goog.object.extend(exports, proto);
